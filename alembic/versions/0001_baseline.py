"""Baseline (from when we switched to uuids)

Revision ID: 0001
Revises:
Create Date: 2022-04-07 21:57:49.569760

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "0001"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=72), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "wikis",
        sa.Column("id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "pages",
        sa.Column("id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
        sa.Column("wiki_id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=True),
        sa.Column("slug", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("is_admin_only", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["wiki_id"],
            ["wikis.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "sections",
        sa.Column("id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
        sa.Column("section_index", sa.Integer(), nullable=True),
        sa.Column("is_admin_only", sa.Boolean(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("page_id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["page_id"],
            ["pages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "section_permissions",
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("user_id", fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False),
        sa.Column("level", sa.Enum("EDIT", "NONE", name="permissionlevel"), nullable=True),
        sa.ForeignKeyConstraint(["section_id"], ["sections.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("section_id", "user_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("section_permissions")
    op.drop_table("sections")
    op.drop_table("pages")
    op.drop_table("wikis")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
